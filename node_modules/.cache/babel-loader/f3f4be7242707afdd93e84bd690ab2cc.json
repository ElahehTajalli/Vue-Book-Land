{"remainingRequest":"/home/elaheh/Documents/University/project/node_modules/babel-loader/lib/index.js!/home/elaheh/Documents/University/project/node_modules/eslint-loader/index.js??ref--13-0!/home/elaheh/Documents/University/project/src/store/actions.js","dependencies":[{"path":"/home/elaheh/Documents/University/project/src/store/actions.js","mtime":1619802003414},{"path":"/home/elaheh/Documents/University/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/elaheh/Documents/University/project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/elaheh/Documents/University/project/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2VsYWhlaC9Eb2N1bWVudHMvVW5pdmVyc2l0eS9wcm9qZWN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgQVBJIGZyb20gJy4uL2FwaS9hcGktY2xhc3MnOwp2YXIgcHJvdG9jb2wgPSAnaHR0cDonOyAvLyBTbWFydCBhcGkgY2FsbHMKCnZhciBwYW5nb29sQVBJID0gbmV3IEFQSSh7CiAgdXJsOiAiIi5jb25jYXQocHJvdG9jb2wsICIvLzk0LjE4NC4xNzYuMTIxL2FwaSIpCn0pOyAvLyBjb25zdCBwYW5nb29sQVBJID0gbmV3IEFQSSh7IHVybDogYCR7cHJvdG9jb2x9Ly9ha25hcmdlcy5weXRob25hbnl3aGVyZS5jb21gfSkKCmV4cG9ydCB2YXIgaGFuZGxlUmVxdWVzdFJlc3BvbnNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoX3JlZiwgX3JlZjIpIHsKICAgIHZhciBjb21taXQsIG11dGF0aW9uLCByZXF1ZXN0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgbXV0YXRpb24gPSBfcmVmMi5tdXRhdGlvbiwgcmVxdWVzdCA9IF9yZWYyLnJlcXVlc3Q7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gY29tbWl0OwogICAgICAgICAgICBfY29udGV4dC50MSA9IG11dGF0aW9uOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3Q7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBfY29udGV4dC50MiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICgwLCBfY29udGV4dC50MCkoX2NvbnRleHQudDEsIF9jb250ZXh0LnQyKTsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gaGFuZGxlUmVxdWVzdFJlc3BvbnNlKF94LCBfeDIpIHsKICAgIHJldHVybiBfcmVmMy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKZXhwb3J0IHZhciBoYW5kbGVSZXF1ZXN0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKF9yZWY0KSB7CiAgICB2YXIgZGlzcGF0Y2gsCiAgICAgICAgY29tbWl0LAogICAgICAgIHBhcmFtcywKICAgICAgICBuYW1lLAogICAgICAgIGFjdGlvbiwKICAgICAgICBtdXRhdGlvbiwKICAgICAgICBkYXRhLAogICAgICAgIHRva2VuU2NvcGUsCiAgICAgICAgbWF0Y2gsCiAgICAgICAgcmVxdWVzdCwKICAgICAgICBfYXJnczIgPSBhcmd1bWVudHM7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWY0LmRpc3BhdGNoLCBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgICAgICAgIHBhcmFtcyA9IF9hcmdzMi5sZW5ndGggPiAxICYmIF9hcmdzMlsxXSAhPT0gdW5kZWZpbmVkID8gX2FyZ3MyWzFdIDoge307CiAgICAgICAgICAgIG5hbWUgPSBwYXJhbXMubmFtZSwgYWN0aW9uID0gcGFyYW1zLmFjdGlvbiwgbXV0YXRpb24gPSBwYXJhbXMubXV0YXRpb24sIGRhdGEgPSBwYXJhbXMuZGF0YSwgdG9rZW5TY29wZSA9IHBhcmFtcy50b2tlblNjb3BlOwogICAgICAgICAgICBtYXRjaCA9IG5hbWUubWF0Y2goL1xiYXV0aC9nKTsKCiAgICAgICAgICAgIGlmIChtYXRjaCA9PT0gbnVsbCkgewogICAgICAgICAgICAgIG5hbWUgPSAiIi5jb25jYXQobmFtZSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICghZGF0YSkgewogICAgICAgICAgICAgIGRhdGEgPSB7fTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCFtdXRhdGlvbikgewogICAgICAgICAgICAgIG11dGF0aW9uID0gbnVsbDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCF0b2tlblNjb3BlKSB7CiAgICAgICAgICAgICAgdG9rZW5TY29wZSA9ICcnOwogICAgICAgICAgICB9CgogICAgICAgICAgICBjb21taXQoJ1NFVF9UT0tFTl9TQ09QRScsIHRva2VuU2NvcGUpOwogICAgICAgICAgICBwYW5nb29sQVBJLmNyZWF0ZUVudGl0eSh7CiAgICAgICAgICAgICAgbmFtZTogbmFtZQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmVxdWVzdCA9IHBhbmdvb2xBUEkuZW5kcG9pbnRzW25hbWVdW2FjdGlvbl0oZGF0YSk7CgogICAgICAgICAgICBpZiAoIShtdXRhdGlvbiAhPT0gbnVsbCkpIHsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE2OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE0OwogICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2goJ2hhbmRsZVJlcXVlc3RSZXNwb25zZScsIHsKICAgICAgICAgICAgICBtdXRhdGlvbjogbXV0YXRpb24sCiAgICAgICAgICAgICAgcmVxdWVzdDogcmVxdWVzdAogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE3OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgcmVxdWVzdCk7CgogICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTIpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGhhbmRsZVJlcXVlc3QoX3gzKSB7CiAgICByZXR1cm4gX3JlZjUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vIC8vIEVuZCBzbWFydCBhcGkgY2FsbHMKCmV4cG9ydCB2YXIgc2V0VXNlcm5hbWUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoX3JlZjYsIHVzZXJuYW1lKSB7CiAgICB2YXIgY29tbWl0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgY29tbWl0ID0gX3JlZjYuY29tbWl0OwogICAgICAgICAgICBjb21taXQoJ1NFVF9VU0VSTkFNRScsIHVzZXJuYW1lKTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBzZXRVc2VybmFtZShfeDQsIF94NSkgewogICAgcmV0dXJuIF9yZWY3LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwpleHBvcnQgdmFyIHNldFRva2VuID0gZnVuY3Rpb24gc2V0VG9rZW4oX3JlZjgsIHRva2VuKSB7CiAgdmFyIGNvbW1pdCA9IF9yZWY4LmNvbW1pdDsKICBjb21taXQoJ1NFVF9UT0tFTicsIHRva2VuKTsKfTsKZXhwb3J0IHZhciBzZXRQcm9maWxlID0gZnVuY3Rpb24gc2V0UHJvZmlsZShfcmVmOSwgcHJvZmlsZSkgewogIHZhciBjb21taXQgPSBfcmVmOS5jb21taXQ7CiAgY29tbWl0KCdTRVRfUFJPRklMRScsIHByb2ZpbGUpOwp9OwpleHBvcnQgdmFyIHNldEZ1bGxzY3JlZW4gPSBmdW5jdGlvbiBzZXRGdWxsc2NyZWVuKF9yZWYxMCwgZnVsbHNjcmVlbikgewogIHZhciBjb21taXQgPSBfcmVmMTAuY29tbWl0OwogIGNvbW1pdCgnU0VUX0ZVTExTQ1JFRU4nLCBmdWxsc2NyZWVuKTsKfTsKZXhwb3J0IHZhciBzZXRDaGVja1VzZXJuYW1lID0gZnVuY3Rpb24gc2V0Q2hlY2tVc2VybmFtZShfcmVmMTEsIGNoZWNrVXNlcm5hbWUpIHsKICB2YXIgY29tbWl0ID0gX3JlZjExLmNvbW1pdDsKICBjb21taXQoJ1NFVF9DSEVDS19VU0VSTkFNRScsIGNoZWNrVXNlcm5hbWUpOwp9OwpleHBvcnQgdmFyIHNldFJlc3VtZSA9IGZ1bmN0aW9uIHNldFJlc3VtZShfcmVmMTIsIHJlc3VtZSkgewogIHZhciBjb21taXQgPSBfcmVmMTIuY29tbWl0OwogIGNvbW1pdCgnU0VUX1JFU1VNRScsIHJlc3VtZSk7Cn07CmV4cG9ydCB2YXIgc2V0UGV0c2l0dGVyVXNlcm5hbWUgPSBmdW5jdGlvbiBzZXRQZXRzaXR0ZXJVc2VybmFtZShfcmVmMTMsIHJlc3VtZSkgewogIHZhciBjb21taXQgPSBfcmVmMTMuY29tbWl0OwogIGNvbW1pdCgnU0VUX1BFVFNJVFRFUlVTRVJOQU1FJywgcmVzdW1lKTsKfTsKZXhwb3J0IHZhciBzZXRJc1Jlc3VtZSA9IGZ1bmN0aW9uIHNldElzUmVzdW1lKF9yZWYxNCwgaXNSZXN1bWUpIHsKICB2YXIgY29tbWl0ID0gX3JlZjE0LmNvbW1pdDsKICBjb21taXQoJ1NFVF9JU1JFU1VNRScsIGlzUmVzdW1lKTsKfTsKZXhwb3J0IHZhciBzZXRJc1NldHRpbmcgPSBmdW5jdGlvbiBzZXRJc1NldHRpbmcoX3JlZjE1LCBpc1NldHRpbmcpIHsKICB2YXIgY29tbWl0ID0gX3JlZjE1LmNvbW1pdDsKICBjb21taXQoJ1NFVF9JU1NFVFRJTkcnLCBpc1NldHRpbmcpOwp9OwpleHBvcnQgdmFyIHNldEZpbHRlcnNTZXR0aW5ncyA9IGZ1bmN0aW9uIHNldEZpbHRlcnNTZXR0aW5ncyhfcmVmMTYsIGZpbHRlcnNTZXR0aW5ncykgewogIHZhciBjb21taXQgPSBfcmVmMTYuY29tbWl0OwogIGNvbW1pdCgnU0VUX0ZJTFRFUlNfU0VUVElOR1MnLCBmaWx0ZXJzU2V0dGluZ3MpOwp9OwpleHBvcnQgdmFyIHNldEV4dHJhRmlsdGVycyA9IGZ1bmN0aW9uIHNldEV4dHJhRmlsdGVycyhfcmVmMTcsIGV4dHJhRmlsdGVycykgewogIHZhciBjb21taXQgPSBfcmVmMTcuY29tbWl0OwogIGNvbW1pdCgnU0VUX0VYVFJBX0ZJTFRFUlMnLCBleHRyYUZpbHRlcnMpOwp9OwpleHBvcnQgdmFyIHNldFZhbGlkVGltZSA9IGZ1bmN0aW9uIHNldFZhbGlkVGltZShfcmVmMTgsIHZhbGlkVGltZSkgewogIHZhciBjb21taXQgPSBfcmVmMTguY29tbWl0OwogIGNvbW1pdCgnU0VUX1ZBTElEVElNRScsIHZhbGlkVGltZSk7Cn07"},{"version":3,"sources":["/home/elaheh/Documents/University/project/src/store/actions.js"],"names":["API","protocol","pangoolAPI","url","handleRequestResponse","commit","mutation","request","handleRequest","dispatch","params","name","action","data","tokenScope","match","createEntity","endpoints","setUsername","username","setToken","token","setProfile","profile","setFullscreen","fullscreen","setCheckUsername","checkUsername","setResume","resume","setPetsitterUsername","setIsResume","isResume","setIsSetting","isSetting","setFiltersSettings","filtersSettings","setExtraFilters","extraFilters","setValidTime","validTime"],"mappings":"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","sourcesContent":["import API from '../api/api-class'\nconst protocol = 'http:'\n// Smart api calls\nconst pangoolAPI = new API({ url: `${protocol}//94.184.176.121/api` })\n// const pangoolAPI = new API({ url: `${protocol}//aknarges.pythonanywhere.com`})\n\nexport const handleRequestResponse = async ({ commit }, { mutation, request }) => {\n  commit(mutation, await request)\n}\n\nexport const handleRequest = async ({ dispatch, commit }, params = {}) => {\n  let { name, action, mutation, data, tokenScope } = params\n  let match = name.match(/\\bauth/g)\n  if (match === null) {\n    name = `${name}`\n  }\n  if (!data) {\n    data = {}\n  }\n  if (!mutation) {\n    mutation = null\n  }\n  if (!tokenScope) {\n    tokenScope = ''\n  }\n  commit('SET_TOKEN_SCOPE', tokenScope)\n  pangoolAPI.createEntity({ name })\n  const request = pangoolAPI.endpoints[name][action](data)\n  if (mutation !== null) {\n    await dispatch('handleRequestResponse', { mutation, request })\n  } else {\n    return request\n  }\n}\n// // End smart api calls\nexport const setUsername = async ({ commit }, username) => {\n  commit('SET_USERNAME', username)\n}\nexport const setToken = ({ commit }, token) => {\n  commit('SET_TOKEN', token)\n}\nexport const setProfile = ({ commit }, profile) => {\n  commit('SET_PROFILE', profile)\n}\nexport const setFullscreen = ({ commit }, fullscreen) => {\n  commit('SET_FULLSCREEN', fullscreen)\n}\nexport const setCheckUsername = ({ commit }, checkUsername) => {\n  commit('SET_CHECK_USERNAME', checkUsername)\n}\n\nexport const setResume = ({ commit }, resume) => {\n  commit('SET_RESUME', resume)\n}\n\nexport const setPetsitterUsername = ({ commit }, resume) => {\n  commit('SET_PETSITTERUSERNAME', resume)\n}\n\nexport const setIsResume = ({ commit }, isResume) => {\n  commit('SET_ISRESUME', isResume)\n}\n\nexport const setIsSetting = ({ commit }, isSetting) => {\n  commit('SET_ISSETTING', isSetting)\n}\nexport const setFiltersSettings = ({ commit }, filtersSettings) => {\n  commit('SET_FILTERS_SETTINGS', filtersSettings)\n}\n\nexport const setExtraFilters = ({ commit }, extraFilters) => {\n  commit('SET_EXTRA_FILTERS', extraFilters)\n}\n\nexport const setValidTime = ({ commit }, validTime) => {\n  commit('SET_VALIDTIME', validTime)\n}\n\n"]}]}