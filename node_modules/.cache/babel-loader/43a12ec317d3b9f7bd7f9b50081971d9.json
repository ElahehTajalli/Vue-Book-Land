{"remainingRequest":"/home/elaheh/Documents/University/Vue-Book-Land/node_modules/babel-loader/lib/index.js!/home/elaheh/Documents/University/Vue-Book-Land/node_modules/eslint-loader/index.js??ref--13-0!/home/elaheh/Documents/University/Vue-Book-Land/src/store/actions.js","dependencies":[{"path":"/home/elaheh/Documents/University/Vue-Book-Land/src/store/actions.js","mtime":1630600246190},{"path":"/home/elaheh/Documents/University/Vue-Book-Land/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/elaheh/Documents/University/Vue-Book-Land/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/elaheh/Documents/University/Vue-Book-Land/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2VsYWhlaC9Eb2N1bWVudHMvVW5pdmVyc2l0eS9WdWUtQm9vay1MYW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgQVBJIGZyb20gJy4uL2FwaS9hcGktY2xhc3MnOwp2YXIgcHJvdG9jb2wgPSAnaHR0cDonOyAvLyBTbWFydCBhcGkgY2FsbHMKLy8gY29uc3Qgc2l0ZUFQSSA9IG5ldyBBUEkoeyB1cmw6IGAke3Byb3RvY29sfS8va2V0YWJsYW5kLnB5dGhvbmFueXdoZXJlLmNvbWAgfSkKCnZhciBzaXRlQVBJID0gbmV3IEFQSSh7CiAgdXJsOiAiIi5jb25jYXQocHJvdG9jb2wsICIvLzEyNy4wLjAuMTo4MDAwIikKfSk7CmV4cG9ydCB2YXIgaGFuZGxlUmVxdWVzdFJlc3BvbnNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoX3JlZiwgX3JlZjIpIHsKICAgIHZhciBjb21taXQsIG11dGF0aW9uLCByZXF1ZXN0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgbXV0YXRpb24gPSBfcmVmMi5tdXRhdGlvbiwgcmVxdWVzdCA9IF9yZWYyLnJlcXVlc3Q7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gY29tbWl0OwogICAgICAgICAgICBfY29udGV4dC50MSA9IG11dGF0aW9uOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3Q7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBfY29udGV4dC50MiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICgwLCBfY29udGV4dC50MCkoX2NvbnRleHQudDEsIF9jb250ZXh0LnQyKTsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gaGFuZGxlUmVxdWVzdFJlc3BvbnNlKF94LCBfeDIpIHsKICAgIHJldHVybiBfcmVmMy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKZXhwb3J0IHZhciBoYW5kbGVSZXF1ZXN0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKF9yZWY0KSB7CiAgICB2YXIgZGlzcGF0Y2gsCiAgICAgICAgY29tbWl0LAogICAgICAgIHBhcmFtcywKICAgICAgICBuYW1lLAogICAgICAgIGFjdGlvbiwKICAgICAgICBtdXRhdGlvbiwKICAgICAgICBkYXRhLAogICAgICAgIHRva2VuU2NvcGUsCiAgICAgICAgbWF0Y2gsCiAgICAgICAgcmVxdWVzdCwKICAgICAgICBfYXJnczIgPSBhcmd1bWVudHM7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWY0LmRpc3BhdGNoLCBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgICAgICAgIHBhcmFtcyA9IF9hcmdzMi5sZW5ndGggPiAxICYmIF9hcmdzMlsxXSAhPT0gdW5kZWZpbmVkID8gX2FyZ3MyWzFdIDoge307CiAgICAgICAgICAgIG5hbWUgPSBwYXJhbXMubmFtZSwgYWN0aW9uID0gcGFyYW1zLmFjdGlvbiwgbXV0YXRpb24gPSBwYXJhbXMubXV0YXRpb24sIGRhdGEgPSBwYXJhbXMuZGF0YSwgdG9rZW5TY29wZSA9IHBhcmFtcy50b2tlblNjb3BlOwogICAgICAgICAgICBtYXRjaCA9IG5hbWUubWF0Y2goL1xiYXV0aC9nKTsKCiAgICAgICAgICAgIGlmIChtYXRjaCA9PT0gbnVsbCkgewogICAgICAgICAgICAgIG5hbWUgPSAiIi5jb25jYXQobmFtZSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICghZGF0YSkgewogICAgICAgICAgICAgIGRhdGEgPSB7fTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCFtdXRhdGlvbikgewogICAgICAgICAgICAgIG11dGF0aW9uID0gbnVsbDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCF0b2tlblNjb3BlKSB7CiAgICAgICAgICAgICAgdG9rZW5TY29wZSA9ICcnOwogICAgICAgICAgICB9CgogICAgICAgICAgICBjb21taXQoJ1NFVF9UT0tFTl9TQ09QRScsIHRva2VuU2NvcGUpOwogICAgICAgICAgICBzaXRlQVBJLmNyZWF0ZUVudGl0eSh7CiAgICAgICAgICAgICAgbmFtZTogbmFtZQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmVxdWVzdCA9IHNpdGVBUEkuZW5kcG9pbnRzW25hbWVdW2FjdGlvbl0oZGF0YSk7CgogICAgICAgICAgICBpZiAoIShtdXRhdGlvbiAhPT0gbnVsbCkpIHsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE2OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE0OwogICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2goJ2hhbmRsZVJlcXVlc3RSZXNwb25zZScsIHsKICAgICAgICAgICAgICBtdXRhdGlvbjogbXV0YXRpb24sCiAgICAgICAgICAgICAgcmVxdWVzdDogcmVxdWVzdAogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE3OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgcmVxdWVzdCk7CgogICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTIpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGhhbmRsZVJlcXVlc3QoX3gzKSB7CiAgICByZXR1cm4gX3JlZjUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vIEVuZCBzbWFydCBhcGkgY2FsbHMKCmV4cG9ydCB2YXIgc2V0VG9rZW4gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoX3JlZjYsIHRva2VuKSB7CiAgICB2YXIgY29tbWl0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgY29tbWl0ID0gX3JlZjYuY29tbWl0OwogICAgICAgICAgICBjb21taXQoJ1NFVF9UT0tFTicsIHRva2VuKTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBzZXRUb2tlbihfeDQsIF94NSkgewogICAgcmV0dXJuIF9yZWY3LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwpleHBvcnQgdmFyIHNldFNlbGYgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmOSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoX3JlZjgsIHNlbGYpIHsKICAgIHZhciBjb21taXQ7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb21taXQgPSBfcmVmOC5jb21taXQ7CiAgICAgICAgICAgIGNvbW1pdCgnU0VUX1NFTEYnLCBzZWxmKTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU0KTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBzZXRTZWxmKF94NiwgX3g3KSB7CiAgICByZXR1cm4gX3JlZjkuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7CmV4cG9ydCB2YXIgc2V0RnVsbHNjcmVlbiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYxMSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUoX3JlZjEwLCBmdWxsc2NyZWVuKSB7CiAgICB2YXIgY29tbWl0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgY29tbWl0ID0gX3JlZjEwLmNvbW1pdDsKICAgICAgICAgICAgY29tbWl0KCdTRVRfRlVMTFNDUkVFTicsIGZ1bGxzY3JlZW4pOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTUpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIHNldEZ1bGxzY3JlZW4oX3g4LCBfeDkpIHsKICAgIHJldHVybiBfcmVmMTEuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7CmV4cG9ydCB2YXIgc2V0TGFzdFJlcXVlc3RlZFBhdGggPSBmdW5jdGlvbiBzZXRMYXN0UmVxdWVzdGVkUGF0aChfcmVmMTIsIGxhc3RSZXF1ZXN0ZWRQYXRoKSB7CiAgdmFyIGNvbW1pdCA9IF9yZWYxMi5jb21taXQ7CiAgY29tbWl0KCdTRVRfTEFTVF9SRVFVRVNURURfUEFUSCcsIGxhc3RSZXF1ZXN0ZWRQYXRoKTsKfTsKZXhwb3J0IHZhciBzZXRTaG93TWVudSA9IGZ1bmN0aW9uIHNldFNob3dNZW51KF9yZWYxMywgc2hvd01lbnUpIHsKICB2YXIgY29tbWl0ID0gX3JlZjEzLmNvbW1pdDsKICBjb21taXQoJ1NFVF9TSE9XX01FTlUnLCBzaG93TWVudSk7Cn07"},{"version":3,"sources":["/home/elaheh/Documents/University/Vue-Book-Land/src/store/actions.js"],"names":["API","protocol","siteAPI","url","handleRequestResponse","commit","mutation","request","handleRequest","dispatch","params","name","action","data","tokenScope","match","createEntity","endpoints","setToken","token","setSelf","self","setFullscreen","fullscreen","setLastRequestedPath","lastRequestedPath","setShowMenu","showMenu"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,kBAAhB;AACA,IAAMC,QAAQ,GAAG,OAAjB,C,CACA;AACA;;AACA,IAAMC,OAAO,GAAG,IAAIF,GAAJ,CAAQ;AAAEG,EAAAA,GAAG,YAAKF,QAAL;AAAL,CAAR,CAAhB;AAEA,OAAO,IAAMG,qBAAqB;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjCC,YAAAA,MADiC,QACjCA,MADiC;AAEjCC,YAAAA,QAFiC,SAEjCA,QAFiC,EAEvBC,OAFuB,SAEvBA,OAFuB;AAAA,0BAInCF,MAJmC;AAAA,0BAI5BC,QAJ4B;AAAA;AAAA,mBAIZC,OAJY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAArBH,qBAAqB;AAAA;AAAA;AAAA,GAA3B;AAOP,OAAO,IAAMI,aAAa;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,QAAT,SAASA,QAAT,EAAmBJ,MAAnB,SAAmBA,MAAnB;AAA6BK,YAAAA,MAA7B,8DAAsC,EAAtC;AACrBC,YAAAA,IADqB,GACwBD,MADxB,CACrBC,IADqB,EACfC,MADe,GACwBF,MADxB,CACfE,MADe,EACPN,QADO,GACwBI,MADxB,CACPJ,QADO,EACGO,IADH,GACwBH,MADxB,CACGG,IADH,EACSC,UADT,GACwBJ,MADxB,CACSI,UADT;AAErBC,YAAAA,KAFqB,GAEbJ,IAAI,CAACI,KAAL,CAAW,SAAX,CAFa;;AAG3B,gBAAIA,KAAK,KAAK,IAAd,EAAoB;AAClBJ,cAAAA,IAAI,aAAMA,IAAN,CAAJ;AACD;;AACD,gBAAI,CAACE,IAAL,EAAW;AACTA,cAAAA,IAAI,GAAG,EAAP;AACD;;AACD,gBAAI,CAACP,QAAL,EAAe;AACbA,cAAAA,QAAQ,GAAG,IAAX;AACD;;AACD,gBAAI,CAACQ,UAAL,EAAiB;AACfA,cAAAA,UAAU,GAAG,EAAb;AACD;;AACDT,YAAAA,MAAM,CAAC,iBAAD,EAAoBS,UAApB,CAAN;AACAZ,YAAAA,OAAO,CAACc,YAAR,CAAqB;AAAEL,cAAAA,IAAI,EAAJA;AAAF,aAArB;AACMJ,YAAAA,OAjBqB,GAiBXL,OAAO,CAACe,SAAR,CAAkBN,IAAlB,EAAwBC,MAAxB,EAAgCC,IAAhC,CAjBW;;AAAA,kBAkBvBP,QAAQ,KAAK,IAlBU;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAmBnBG,QAAQ,CAAC,uBAAD,EAA0B;AAAEH,cAAAA,QAAQ,EAARA,QAAF;AAAYC,cAAAA,OAAO,EAAPA;AAAZ,aAA1B,CAnBW;;AAAA;AAAA;AAAA;;AAAA;AAAA,8CAqBlBA,OArBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbC,aAAa;AAAA;AAAA;AAAA,GAAnB,C,CAwBP;;AACA,OAAO,IAAMU,QAAQ;AAAA,sEAAG,yBAAmBC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASd,YAAAA,MAAT,SAASA,MAAT;AACtBA,YAAAA,MAAM,CAAC,WAAD,EAAcc,KAAd,CAAN;;AADsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARD,QAAQ;AAAA;AAAA;AAAA,GAAd;AAIP,OAAO,IAAME,OAAO;AAAA,sEAAG,yBAAmBC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAShB,YAAAA,MAAT,SAASA,MAAT;AACrBA,YAAAA,MAAM,CAAC,UAAD,EAAagB,IAAb,CAAN;;AADqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPD,OAAO;AAAA;AAAA;AAAA,GAAb;AAIP,OAAO,IAAME,aAAa;AAAA,uEAAG,0BAAmBC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASlB,YAAAA,MAAT,UAASA,MAAT;AAC3BA,YAAAA,MAAM,CAAC,gBAAD,EAAmBkB,UAAnB,CAAN;;AAD2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbD,aAAa;AAAA;AAAA;AAAA,GAAnB;AAIP,OAAO,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,SAAaC,iBAAb,EAAmC;AAAA,MAAhCpB,MAAgC,UAAhCA,MAAgC;AACrEA,EAAAA,MAAM,CAAC,yBAAD,EAA4BoB,iBAA5B,CAAN;AACD,CAFM;AAIP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,SAAaC,QAAb,EAA0B;AAAA,MAAvBtB,MAAuB,UAAvBA,MAAuB;AACnDA,EAAAA,MAAM,CAAC,eAAD,EAAkBsB,QAAlB,CAAN;AACD,CAFM","sourcesContent":["import API from '../api/api-class'\nconst protocol = 'http:'\n// Smart api calls\n// const siteAPI = new API({ url: `${protocol}//ketabland.pythonanywhere.com` })\nconst siteAPI = new API({ url: `${protocol}//127.0.0.1:8000` })\n\nexport const handleRequestResponse = async (\n  { commit },\n  { mutation, request }\n) => {\n  commit(mutation, await request)\n}\n\nexport const handleRequest = async ({ dispatch, commit }, params = {}) => {\n  let { name, action, mutation, data, tokenScope } = params\n  const match = name.match(/\\bauth/g)\n  if (match === null) {\n    name = `${name}`\n  }\n  if (!data) {\n    data = {}\n  }\n  if (!mutation) {\n    mutation = null\n  }\n  if (!tokenScope) {\n    tokenScope = ''\n  }\n  commit('SET_TOKEN_SCOPE', tokenScope)\n  siteAPI.createEntity({ name })\n  const request = siteAPI.endpoints[name][action](data)\n  if (mutation !== null) {\n    await dispatch('handleRequestResponse', { mutation, request })\n  } else {\n    return request\n  }\n}\n// End smart api calls\nexport const setToken = async ({ commit }, token) => {\n  commit('SET_TOKEN', token)\n}\n\nexport const setSelf = async ({ commit }, self) => {\n  commit('SET_SELF', self)\n}\n\nexport const setFullscreen = async ({ commit }, fullscreen) => {\n  commit('SET_FULLSCREEN', fullscreen)\n}\n\nexport const setLastRequestedPath = ({ commit }, lastRequestedPath) => {\n  commit('SET_LAST_REQUESTED_PATH', lastRequestedPath)\n}\n\nexport const setShowMenu = ({ commit }, showMenu) => {\n  commit('SET_SHOW_MENU', showMenu)\n}\n"]}]}