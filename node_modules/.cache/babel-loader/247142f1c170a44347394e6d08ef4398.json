{"remainingRequest":"/home/elaheh/Documents/University/project/node_modules/babel-loader/lib/index.js!/home/elaheh/Documents/University/project/node_modules/eslint-loader/index.js??ref--13-0!/home/elaheh/Documents/University/project/src/api/axios.js","dependencies":[{"path":"/home/elaheh/Documents/University/project/src/api/axios.js","mtime":1619802064946},{"path":"/home/elaheh/Documents/University/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/elaheh/Documents/University/project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/elaheh/Documents/University/project/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IFFzIGZyb20gJ3FzJzsKaW1wb3J0IHsgcmVxdWVzdFN1Y2Nlc3NJbnRlcmNlcHRvciwgcmVxdWVzdEVycm9ySW50ZXJjZXB0b3IgfSBmcm9tICcuLi9hcGkvcmVxdWVzdC1pbnRlcmNlcHRvcnMnOyAvLyBEZWNsYXJhdGlvbnMKCnZhciBfYXhpb3MgPSBheGlvcy5jcmVhdGUoewogIHBhcmFtc1NlcmlhbGl6ZXI6IGZ1bmN0aW9uIHBhcmFtc1NlcmlhbGl6ZXIocGFyYW1zKSB7CiAgICByZXR1cm4gUXMuc3RyaW5naWZ5KHBhcmFtcywgewogICAgICBhcnJheUZvcm1hdDogJ3JlcGVhdCcKICAgIH0pOwogIH0KfSk7CgpfYXhpb3MuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKHJlcXVlc3RTdWNjZXNzSW50ZXJjZXB0b3IsIHJlcXVlc3RFcnJvckludGVyY2VwdG9yKTsKCmV4cG9ydCBkZWZhdWx0IF9heGlvczs="},{"version":3,"sources":["/home/elaheh/Documents/University/project/src/api/axios.js"],"names":["axios","Qs","requestSuccessInterceptor","requestErrorInterceptor","_axios","create","paramsSerializer","params","stringify","arrayFormat","interceptors","request","use"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SACEC,yBADF,EAEEC,uBAFF,QAGO,6BAHP,C,CAIA;;AAEA,IAAMC,MAAM,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC1BC,EAAAA,gBAAgB,EAAE,0BAAAC,MAAM;AAAA,WAAIN,EAAE,CAACO,SAAH,CAAaD,MAAb,EAAqB;AAAEE,MAAAA,WAAW,EAAE;AAAf,KAArB,CAAJ;AAAA;AADE,CAAb,CAAf;;AAIAL,MAAM,CAACM,YAAP,CAAoBC,OAApB,CACGC,GADH,CACOV,yBADP,EACkCC,uBADlC;;AAGA,eAAeC,MAAf","sourcesContent":["import axios from 'axios'\nimport Qs from 'qs'\nimport {\n  requestSuccessInterceptor,\n  requestErrorInterceptor\n} from '../api/request-interceptors'\n// Declarations\n\nconst _axios = axios.create({\n  paramsSerializer: params => Qs.stringify(params, { arrayFormat: 'repeat' })\n})\n\n_axios.interceptors.request\n  .use(requestSuccessInterceptor, requestErrorInterceptor)\n\nexport default _axios\n"]}]}