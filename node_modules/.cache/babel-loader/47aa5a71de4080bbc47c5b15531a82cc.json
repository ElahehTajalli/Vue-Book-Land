{"remainingRequest":"/home/elaheh/Documents/University/project/node_modules/babel-loader/lib/index.js!/home/elaheh/Documents/University/project/node_modules/eslint-loader/index.js??ref--13-0!/home/elaheh/Documents/University/project/src/store/actions.js","dependencies":[{"path":"/home/elaheh/Documents/University/project/src/store/actions.js","mtime":1624624656489},{"path":"/home/elaheh/Documents/University/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/elaheh/Documents/University/project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/elaheh/Documents/University/project/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2VsYWhlaC9Eb2N1bWVudHMvVW5pdmVyc2l0eS9wcm9qZWN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgQVBJIGZyb20gJy4uL2FwaS9hcGktY2xhc3MnOwp2YXIgcHJvdG9jb2wgPSAnaHR0cDonOyAvLyBTbWFydCBhcGkgY2FsbHMKLy8gY29uc3QgcGFuZ29vbEFQSSA9IG5ldyBBUEkoeyB1cmw6IGAke3Byb3RvY29sfS8vYWtuYXJnZXMucHl0aG9uYW55d2hlcmUuY29tYCB9KQoKdmFyIHNpdGVBUEkgPSBuZXcgQVBJKHsKICB1cmw6ICIiLmNvbmNhdChwcm90b2NvbCwgIi8vMTI3LjAuMC4xOjgwMDAiKQp9KTsKZXhwb3J0IHZhciBoYW5kbGVSZXF1ZXN0UmVzcG9uc2UgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShfcmVmLCBfcmVmMikgewogICAgdmFyIGNvbW1pdCwgbXV0YXRpb24sIHJlcXVlc3Q7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICBtdXRhdGlvbiA9IF9yZWYyLm11dGF0aW9uLCByZXF1ZXN0ID0gX3JlZjIucmVxdWVzdDsKICAgICAgICAgICAgX2NvbnRleHQudDAgPSBjb21taXQ7CiAgICAgICAgICAgIF9jb250ZXh0LnQxID0gbXV0YXRpb247CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICByZXR1cm4gcmVxdWVzdDsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIF9jb250ZXh0LnQyID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgKDAsIF9jb250ZXh0LnQwKShfY29udGV4dC50MSwgX2NvbnRleHQudDIpOwoKICAgICAgICAgIGNhc2UgODoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBoYW5kbGVSZXF1ZXN0UmVzcG9uc2UoX3gsIF94MikgewogICAgcmV0dXJuIF9yZWYzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwpleHBvcnQgdmFyIGhhbmRsZVJlcXVlc3QgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoX3JlZjQpIHsKICAgIHZhciBkaXNwYXRjaCwKICAgICAgICBjb21taXQsCiAgICAgICAgcGFyYW1zLAogICAgICAgIG5hbWUsCiAgICAgICAgYWN0aW9uLAogICAgICAgIG11dGF0aW9uLAogICAgICAgIGRhdGEsCiAgICAgICAgdG9rZW5TY29wZSwKICAgICAgICBtYXRjaCwKICAgICAgICByZXF1ZXN0LAogICAgICAgIF9hcmdzMiA9IGFyZ3VtZW50czsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjQuZGlzcGF0Y2gsIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgICAgICAgcGFyYW1zID0gX2FyZ3MyLmxlbmd0aCA+IDEgJiYgX2FyZ3MyWzFdICE9PSB1bmRlZmluZWQgPyBfYXJnczJbMV0gOiB7fTsKICAgICAgICAgICAgbmFtZSA9IHBhcmFtcy5uYW1lLCBhY3Rpb24gPSBwYXJhbXMuYWN0aW9uLCBtdXRhdGlvbiA9IHBhcmFtcy5tdXRhdGlvbiwgZGF0YSA9IHBhcmFtcy5kYXRhLCB0b2tlblNjb3BlID0gcGFyYW1zLnRva2VuU2NvcGU7CiAgICAgICAgICAgIG1hdGNoID0gbmFtZS5tYXRjaCgvXGJhdXRoL2cpOwoKICAgICAgICAgICAgaWYgKG1hdGNoID09PSBudWxsKSB7CiAgICAgICAgICAgICAgbmFtZSA9ICIiLmNvbmNhdChuYW1lKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCFkYXRhKSB7CiAgICAgICAgICAgICAgZGF0YSA9IHt9OwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoIW11dGF0aW9uKSB7CiAgICAgICAgICAgICAgbXV0YXRpb24gPSBudWxsOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoIXRva2VuU2NvcGUpIHsKICAgICAgICAgICAgICB0b2tlblNjb3BlID0gJyc7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNvbW1pdCgnU0VUX1RPS0VOX1NDT1BFJywgdG9rZW5TY29wZSk7CiAgICAgICAgICAgIHNpdGVBUEkuY3JlYXRlRW50aXR5KHsKICAgICAgICAgICAgICBuYW1lOiBuYW1lCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICByZXF1ZXN0ID0gc2l0ZUFQSS5lbmRwb2ludHNbbmFtZV1bYWN0aW9uXShkYXRhKTsKCiAgICAgICAgICAgIGlmICghKG11dGF0aW9uICE9PSBudWxsKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTQ7CiAgICAgICAgICAgIHJldHVybiBkaXNwYXRjaCgnaGFuZGxlUmVxdWVzdFJlc3BvbnNlJywgewogICAgICAgICAgICAgIG11dGF0aW9uOiBtdXRhdGlvbiwKICAgICAgICAgICAgICByZXF1ZXN0OiByZXF1ZXN0CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTc7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXF1ZXN0KTsKCiAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMik7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gaGFuZGxlUmVxdWVzdChfeDMpIHsKICAgIHJldHVybiBfcmVmNS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsgLy8gRW5kIHNtYXJ0IGFwaSBjYWxscwoKZXhwb3J0IHZhciBzZXRUb2tlbiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWY3ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhfcmVmNiwgdG9rZW4pIHsKICAgIHZhciBjb21taXQ7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb21taXQgPSBfcmVmNi5jb21taXQ7CiAgICAgICAgICAgIGNvbW1pdCgnU0VUX1RPS0VOJywgdG9rZW4pOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTMpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIHNldFRva2VuKF94NCwgX3g1KSB7CiAgICByZXR1cm4gX3JlZjcuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7CmV4cG9ydCB2YXIgc2V0U2VsZiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWY5ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNChfcmVmOCwgc2VsZikgewogICAgdmFyIGNvbW1pdDsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY4LmNvbW1pdDsKICAgICAgICAgICAgY29tbWl0KCdTRVRfU0VMRicsIHNlbGYpOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTQpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIHNldFNlbGYoX3g2LCBfeDcpIHsKICAgIHJldHVybiBfcmVmOS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKZXhwb3J0IHZhciBzZXRGdWxsc2NyZWVuID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjExID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNShfcmVmMTAsIGZ1bGxzY3JlZW4pIHsKICAgIHZhciBjb21taXQ7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb21taXQgPSBfcmVmMTAuY29tbWl0OwogICAgICAgICAgICBjb21taXQoJ1NFVF9GVUxMU0NSRUVOJywgZnVsbHNjcmVlbik7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlNSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gc2V0RnVsbHNjcmVlbihfeDgsIF94OSkgewogICAgcmV0dXJuIF9yZWYxMS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKZXhwb3J0IHZhciBzZXRMYXN0UmVxdWVzdGVkUGF0aCA9IGZ1bmN0aW9uIHNldExhc3RSZXF1ZXN0ZWRQYXRoKF9yZWYxMiwgbGFzdFJlcXVlc3RlZFBhdGgpIHsKICB2YXIgY29tbWl0ID0gX3JlZjEyLmNvbW1pdDsKICBjb21taXQoJ1NFVF9MQVNUX1JFUVVFU1RFRF9QQVRIJywgbGFzdFJlcXVlc3RlZFBhdGgpOwp9Ow=="},{"version":3,"sources":["/home/elaheh/Documents/University/project/src/store/actions.js"],"names":["API","protocol","siteAPI","url","handleRequestResponse","commit","mutation","request","handleRequest","dispatch","params","name","action","data","tokenScope","match","createEntity","endpoints","setToken","token","setSelf","self","setFullscreen","fullscreen","setLastRequestedPath","lastRequestedPath"],"mappings":"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","sourcesContent":["import API from '../api/api-class'\nconst protocol = 'http:'\n// Smart api calls\n// const pangoolAPI = new API({ url: `${protocol}//aknarges.pythonanywhere.com` })\nconst siteAPI = new API({ url: `${protocol}//127.0.0.1:8000` })\n\nexport const handleRequestResponse = async (\n  { commit },\n  { mutation, request }\n) => {\n  commit(mutation, await request)\n}\n\nexport const handleRequest = async ({ dispatch, commit }, params = {}) => {\n  let { name, action, mutation, data, tokenScope } = params\n  const match = name.match(/\\bauth/g)\n  if (match === null) {\n    name = `${name}`\n  }\n  if (!data) {\n    data = {}\n  }\n  if (!mutation) {\n    mutation = null\n  }\n  if (!tokenScope) {\n    tokenScope = ''\n  }\n  commit('SET_TOKEN_SCOPE', tokenScope)\n  siteAPI.createEntity({ name })\n  const request = siteAPI.endpoints[name][action](data)\n  if (mutation !== null) {\n    await dispatch('handleRequestResponse', { mutation, request })\n  } else {\n    return request\n  }\n}\n// End smart api calls\nexport const setToken = async ({ commit }, token) => {\n  commit('SET_TOKEN', token)\n}\n\nexport const setSelf = async ({ commit }, self) => {\n  commit('SET_SELF', self)\n}\n\nexport const setFullscreen = async ({ commit }, fullscreen) => {\n  commit('SET_FULLSCREEN', fullscreen)\n}\n\nexport const setLastRequestedPath = ({ commit }, lastRequestedPath) => {\n  commit('SET_LAST_REQUESTED_PATH', lastRequestedPath)\n}\n"]}]}