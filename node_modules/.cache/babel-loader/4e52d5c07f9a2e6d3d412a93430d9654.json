{"remainingRequest":"/home/elaheh/Documents/University/project/node_modules/babel-loader/lib/index.js!/home/elaheh/Documents/University/project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/elaheh/Documents/University/project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/elaheh/Documents/University/project/src/components/chat/Contacts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/elaheh/Documents/University/project/src/components/chat/Contacts.vue","mtime":1629960624429},{"path":"/home/elaheh/Documents/University/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/elaheh/Documents/University/project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/elaheh/Documents/University/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/elaheh/Documents/University/project/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/elaheh/Documents/University/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/elaheh/Documents/University/project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/elaheh/Documents/University/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/elaheh/Documents/University/project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS9lbGFoZWgvRG9jdW1lbnRzL1VuaXZlcnNpdHkvcHJvamVjdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvaG9tZS9lbGFoZWgvRG9jdW1lbnRzL1VuaXZlcnNpdHkvcHJvamVjdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9lbGFoZWgvRG9jdW1lbnRzL1VuaXZlcnNpdHkvcHJvamVjdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwR2V0dGVycywgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbnRhY3RzOiBbXSwKICAgICAgbGFzdE1lc3NhZ2VzOiBbXSwKICAgICAgY2hhdHM6IFtdLAogICAgICBpZHM6IFtdLAogICAgICB0aW1lcjogMCwKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIGZvbGxvd2luZzogW10KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX3RoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgICAgX3RoaXMudGltZXIgPSBzZXRJbnRlcnZhbChfdGhpcy5nZXREYXRhLCAxMDAwKTsKCiAgICAgICAgICAgICAgaWYgKCFfdGhpcy5zZWxmKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLmdldENvbnRhY3RzKCk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgJyc7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyhbJ3NlbGYnXSkpLAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwQWN0aW9ucyhbJ2hhbmRsZVJlcXVlc3QnXSkpLCB7fSwgewogICAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmhhbmRsZVJlcXVlc3QoewogICAgICAgIG5hbWU6ICdjaGF0cy8nLAogICAgICAgIGFjdGlvbjogJ2dldEFsbCcKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMyLmNoYXRzID0gcmVzLmRhdGEubWVzc2FnZXM7CgogICAgICAgIF90aGlzMi5zZXRDb250YWN0cygpOwogICAgICB9KTsKICAgIH0sCiAgICBzZXRDb250YWN0czogZnVuY3Rpb24gc2V0Q29udGFjdHMoKSB7CiAgICAgIHRoaXMuY29udGFjdHMgPSBbXTsKICAgICAgdGhpcy5sYXN0TWVzc2FnZXMgPSBbXTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5jaGF0cy5sZW5ndGg7IGkrKykgewogICAgICAgIGlmICh0aGlzLmNoYXRzW2ldLnNlbmRlci5pZCAhPT0gdGhpcy5zZWxmLmlkICYmIHRoaXMuY29udGFjdHMubWFwKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICByZXR1cm4gZS5wZXJzaWFuX3VzZXJuYW1lOwogICAgICAgIH0pLmluZGV4T2YodGhpcy5jaGF0c1tpXS5zZW5kZXIucGVyc2lhbl91c2VybmFtZSkgPCAwKSB7CiAgICAgICAgICB2YXIgX3RoaXMkbGFzdE1lc3NhZ2VzJHB1OwoKICAgICAgICAgIHRoaXMuY29udGFjdHMucHVzaCh0aGlzLmNoYXRzW2ldLnNlbmRlcik7CiAgICAgICAgICB0aGlzLmxhc3RNZXNzYWdlcy5wdXNoKChfdGhpcyRsYXN0TWVzc2FnZXMkcHUgPSB7fSwgX2RlZmluZVByb3BlcnR5KF90aGlzJGxhc3RNZXNzYWdlcyRwdSwgdGhpcy5jaGF0c1tpXS5zZW5kZXIucGVyc2lhbl91c2VybmFtZSwgdGhpcy5jaGF0c1tpXS50ZXh0KSwgX2RlZmluZVByb3BlcnR5KF90aGlzJGxhc3RNZXNzYWdlcyRwdSwgInVzZXJfaWQiLCB0aGlzLmNoYXRzW2ldLnNlbmRlci5pZCksIF9kZWZpbmVQcm9wZXJ0eShfdGhpcyRsYXN0TWVzc2FnZXMkcHUsICJ1c2VyX25hbWUiLCB0aGlzLmNoYXRzW2ldLnNlbmRlci5wZXJzaWFuX3VzZXJuYW1lKSwgX3RoaXMkbGFzdE1lc3NhZ2VzJHB1KSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmNoYXRzW2ldLnJlY2VpdmVyLmlkICE9PSB0aGlzLnNlbGYuaWQgJiYgdGhpcy5jb250YWN0cy5tYXAoZnVuY3Rpb24gKGUpIHsKICAgICAgICAgIHJldHVybiBlLnBlcnNpYW5fdXNlcm5hbWU7CiAgICAgICAgfSkuaW5kZXhPZih0aGlzLmNoYXRzW2ldLnJlY2VpdmVyLnBlcnNpYW5fdXNlcm5hbWUpIDwgMCkgewogICAgICAgICAgdmFyIF90aGlzJGxhc3RNZXNzYWdlcyRwdTI7CgogICAgICAgICAgdGhpcy5jb250YWN0cy5wdXNoKHRoaXMuY2hhdHNbaV0ucmVjZWl2ZXIpOwogICAgICAgICAgdGhpcy5sYXN0TWVzc2FnZXMucHVzaCgoX3RoaXMkbGFzdE1lc3NhZ2VzJHB1MiA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX3RoaXMkbGFzdE1lc3NhZ2VzJHB1MiwgdGhpcy5jaGF0c1tpXS5yZWNlaXZlci5wZXJzaWFuX3VzZXJuYW1lLCB0aGlzLmNoYXRzW2ldLnRleHQpLCBfZGVmaW5lUHJvcGVydHkoX3RoaXMkbGFzdE1lc3NhZ2VzJHB1MiwgInVzZXJfaWQiLCB0aGlzLmNoYXRzW2ldLnJlY2VpdmVyLmlkKSwgX2RlZmluZVByb3BlcnR5KF90aGlzJGxhc3RNZXNzYWdlcyRwdTIsICJ1c2VyX25hbWUiLCB0aGlzLmNoYXRzW2ldLnNlbmRlci5wZXJzaWFuX3VzZXJuYW1lKSwgX3RoaXMkbGFzdE1lc3NhZ2VzJHB1MikpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICB9LAogICAgc2V0Um91dGU6IGZ1bmN0aW9uIHNldFJvdXRlKGluZGV4KSB7CiAgICAgIHZhciBpc0NoYXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHRydWU7CgogICAgICBpZiAoaXNDaGF0KSB7CiAgICAgICAgY29uc29sZS5sb2codGhpcy5sYXN0TWVzc2FnZXNbaW5kZXhdKTsKCiAgICAgICAgaWYgKHRoaXMubGFzdE1lc3NhZ2VzW2luZGV4XVsndXNlcl9pZCddICE9IHRoaXMuJHJvdXRlLnBhcmFtcy5pZCkgewogICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICBuYW1lOiAnQ2hhdElEJywKICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgaWQ6IHRoaXMubGFzdE1lc3NhZ2VzW2luZGV4XVsndXNlcl9pZCddCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICBuYW1lOiAnQ2hhdElEJywKICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICBpZDogaW5kZXgKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGdldENvbnRhY3RzOiBmdW5jdGlvbiBnZXRDb250YWN0cygpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLmhhbmRsZVJlcXVlc3QoewogICAgICAgIG5hbWU6ICd1c2Vycy9nZXRSZWxhdGlvbnNoaXBzJywKICAgICAgICBhY3Rpb246ICdnZXRBbGwnLAogICAgICAgIGRhdGE6IHsKICAgICAgICAgIHF1ZXJ5OiB7CiAgICAgICAgICAgIGZvbGxvd2luZ19pZDogdGhpcy5zZWxmLmlkCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczMuZm9sbG93aW5nID0gcmVzLmRhdGEucmVsYXRpb25zaGlwczsKICAgICAgfSk7CiAgICB9CiAgfSksCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcik7CiAgfSwKICB3YXRjaDogewogICAgc2VsZjogZnVuY3Rpb24gc2VsZigpIHsKICAgICAgdGhpcy5nZXRDb250YWN0cygpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Contacts.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"contacts\" v-loading.fullscreen.lock=\"loading\">\n    <el-tabs type=\"border-card\">\n      <el-tab-pane :label=\"$t('messages')\">\n        <div class=\"items\">\n          <div\n            v-for=\"(c, index) in contacts\"\n            :key=\"c.id\"\n            :class=\"\n              `item ${c.id == Number($route.params.id) ? 'active-tab' : ''}`\n            \"\n            @click=\"setRoute(index)\"\n          >\n            <img\n              class=\"user-picture\"\n              v-if=\"c.image\"\n              :src=\"'http://127.0.0.1:8000' + c.image\"\n            />\n            <img\n              v-else\n              class=\"user-picture\"\n              src=\"https://img.icons8.com/cotton/64/000000/person-male--v2.png\"\n            />\n            <div>\n              <span class=\"detail\">{{ c.persian_username }}</span>\n              <div class=\"flexbox row-direction div-detail\">\n                <span class=\"detail\">\n                  {{\n                    c.persian_username !== lastMessages[index]['user_name']\n                      ? $t('you')\n                      : lastMessages[index]['user_name']\n                  }}:\n                </span>\n                <span class=\"detail\">\n                  {{ lastMessages[index][c.persian_username] }}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </el-tab-pane>\n      <el-tab-pane :label=\"$t('following')\">\n        <div class=\"items\">\n          <div\n            v-for=\"c in following\"\n            :key=\"c.follower.id\"\n            class=\"item\"\n            @click=\"setRoute(c.follower.id, false)\"\n          >\n            <img\n              class=\"user-picture\"\n              v-if=\"c.follower.image\"\n              :src=\"'http://127.0.0.1:8000' + c.follower.image\"\n            />\n            <img\n              v-else\n              class=\"user-picture\"\n              src=\"https://img.icons8.com/cotton/64/000000/person-male--v2.png\"\n            />\n            <div>\n              <span class=\"detail user-detail\">{{\n                c.follower.persian_username\n              }}</span>\n            </div>\n          </div>\n        </div>\n      </el-tab-pane>\n    </el-tabs>\n    <!-- <el-card>\n      <div slot=\"header\" class=\"clearfix\">\n        <span>{{ $t('contacts') }}</span>\n      </div>\n      \n    </el-card> -->\n  </div>\n</template>\n\n<script>\n  import { mapGetters, mapActions } from 'vuex'\n  export default {\n    data() {\n      return {\n        contacts: [],\n        lastMessages: [],\n        chats: [],\n        ids: [],\n        timer: 0,\n        loading: false,\n        following: []\n      }\n    },\n    async created() {\n      this.loading = true\n      this.timer = setInterval(this.getData, 1000)\n      this.self ? await this.getContacts() : ''\n    },\n    computed: {\n      ...mapGetters(['self'])\n    },\n    methods: {\n      ...mapActions(['handleRequest']),\n      getData() {\n        this.handleRequest({\n          name: 'chats/',\n          action: 'getAll'\n        }).then((res) => {\n          this.chats = res.data.messages\n          this.setContacts()\n        })\n      },\n      setContacts() {\n        this.contacts = []\n        this.lastMessages = []\n        for (let i = 0; i < this.chats.length; i++) {\n          if (\n            this.chats[i].sender.id !== this.self.id &&\n            this.contacts\n              .map((e) => {\n                return e.persian_username\n              })\n              .indexOf(this.chats[i].sender.persian_username) < 0\n          ) {\n            this.contacts.push(this.chats[i].sender)\n            this.lastMessages.push({\n              [this.chats[i].sender.persian_username]: this.chats[i].text,\n              user_id: this.chats[i].sender.id,\n              user_name: this.chats[i].sender.persian_username\n            })\n          } else if (\n            this.chats[i].receiver.id !== this.self.id &&\n            this.contacts\n              .map((e) => {\n                return e.persian_username\n              })\n              .indexOf(this.chats[i].receiver.persian_username) < 0\n          ) {\n            this.contacts.push(this.chats[i].receiver)\n            this.lastMessages.push({\n              [this.chats[i].receiver.persian_username]: this.chats[i].text,\n              user_id: this.chats[i].receiver.id,\n              user_name: this.chats[i].sender.persian_username\n            })\n          }\n        }\n        this.loading = false\n      },\n      setRoute(index, isChat = true) {\n        if (isChat) {\n          console.log(this.lastMessages[index])\n          if (this.lastMessages[index]['user_id'] != this.$route.params.id) {\n            this.$router.push({\n              name: 'ChatID',\n              params: { id: this.lastMessages[index]['user_id'] }\n            })\n          }\n        } else {\n          this.$router.push({\n            name: 'ChatID',\n            params: { id: index }\n          })\n        }\n      },\n      getContacts() {\n        this.handleRequest({\n          name: 'users/getRelationships',\n          action: 'getAll',\n          data: {\n            query: {\n              following_id: this.self.id\n            }\n          }\n        }).then((res) => {\n          this.following = res.data.relationships\n        })\n      }\n    },\n    beforeDestroy() {\n      clearInterval(this.timer)\n    },\n    watch: {\n      self() {\n        this.getContacts()\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"src/components/chat"}]}