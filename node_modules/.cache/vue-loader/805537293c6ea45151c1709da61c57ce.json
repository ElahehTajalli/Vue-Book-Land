{"remainingRequest":"/home/elaheh/Documents/University/project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/elaheh/Documents/University/project/src/components/chat/Contacts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/elaheh/Documents/University/project/src/components/chat/Contacts.vue","mtime":1628613987609},{"path":"/home/elaheh/Documents/University/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/elaheh/Documents/University/project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/elaheh/Documents/University/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/elaheh/Documents/University/project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbnRhY3RzOiBbXSwKICAgICAgbGFzdE1lc3NhZ2VzOiBbXSwKICAgICAgY2hhdHM6IFtdLAogICAgICBpZHM6IFtdLAogICAgICB0aW1lcjogMCwKICAgICAgbG9hZGluZzogZmFsc2UKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmxvYWRpbmcgPSB0cnVlCiAgICB0aGlzLnRpbWVyID0gc2V0SW50ZXJ2YWwodGhpcy5nZXREYXRhLCAxMDAwKQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoWydzZWxmJ10pCiAgfSwKICBtZXRob2RzOiB7CiAgICAuLi5tYXBBY3Rpb25zKFsnaGFuZGxlUmVxdWVzdCddKSwKICAgIGdldERhdGEoKSB7CiAgICAgIHRoaXMuaGFuZGxlUmVxdWVzdCh7CiAgICAgICAgbmFtZTogJ2NoYXRzLycsCiAgICAgICAgYWN0aW9uOiAnZ2V0QWxsJwogICAgICB9KS50aGVuKChyZXMpID0+IHsKICAgICAgICB0aGlzLmNoYXRzID0gcmVzLmRhdGEubWVzc2FnZXMKICAgICAgICB0aGlzLnNldENvbnRhY3RzKCkKICAgICAgfSkKICAgIH0sCiAgICBzZXRDb250YWN0cygpIHsKICAgICAgdGhpcy5jb250YWN0cyA9IFtdCiAgICAgIHRoaXMubGFzdE1lc3NhZ2VzID0gW10KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmNoYXRzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKAogICAgICAgICAgdGhpcy5jaGF0c1tpXS5zZW5kZXIuaWQgIT09IHRoaXMuc2VsZi5pZCAmJgogICAgICAgICAgdGhpcy5jb250YWN0cy5pbmRleE9mKHRoaXMuY2hhdHNbaV0uc2VuZGVyLnBlcnNpYW5fdXNlcm5hbWUpIDwgMAogICAgICAgICkgewogICAgICAgICAgdGhpcy5jb250YWN0cy5wdXNoKHRoaXMuY2hhdHNbaV0uc2VuZGVyLnBlcnNpYW5fdXNlcm5hbWUpCiAgICAgICAgICB0aGlzLmxhc3RNZXNzYWdlcy5wdXNoKHsKICAgICAgICAgICAgW3RoaXMuY2hhdHNbaV0uc2VuZGVyLnBlcnNpYW5fdXNlcm5hbWVdOiB0aGlzLmNoYXRzW2ldLnRleHQsCiAgICAgICAgICAgIHVzZXJfaWQ6IHRoaXMuY2hhdHNbaV0uc2VuZGVyLmlkCiAgICAgICAgICB9KQogICAgICAgIH0gZWxzZSBpZiAoCiAgICAgICAgICB0aGlzLmNoYXRzW2ldLnJlY2VpdmVyLmlkICE9PSB0aGlzLnNlbGYuaWQgJiYKICAgICAgICAgIHRoaXMuY29udGFjdHMuaW5kZXhPZih0aGlzLmNoYXRzW2ldLnJlY2VpdmVyLnBlcnNpYW5fdXNlcm5hbWUpIDwgMAogICAgICAgICkgewogICAgICAgICAgdGhpcy5jb250YWN0cy5wdXNoKHRoaXMuY2hhdHNbaV0ucmVjZWl2ZXIucGVyc2lhbl91c2VybmFtZSkKICAgICAgICAgIHRoaXMubGFzdE1lc3NhZ2VzLnB1c2goewogICAgICAgICAgICBbdGhpcy5jaGF0c1tpXS5yZWNlaXZlci5wZXJzaWFuX3VzZXJuYW1lXTogdGhpcy5jaGF0c1tpXS50ZXh0LAogICAgICAgICAgICB1c2VyX2lkOiB0aGlzLmNoYXRzW2ldLnJlY2VpdmVyLmlkCiAgICAgICAgICB9KQogICAgICAgIH0KICAgICAgfQogICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgfSwKICAgIHNldFJvdXRlKGluZGV4KSB7CiAgICAgIGlmICh0aGlzLmxhc3RNZXNzYWdlc1tpbmRleF1bJ3VzZXJfaWQnXSAhPSB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpIHsKICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICBuYW1lOiAnQ2hhdElEJywKICAgICAgICAgIHBhcmFtczogeyBpZDogdGhpcy5sYXN0TWVzc2FnZXNbaW5kZXhdWyd1c2VyX2lkJ10gfQogICAgICAgIH0pCiAgICAgIH0KICAgIH0KICB9LAogIGJlZm9yZURlc3Ryb3koKSB7CiAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpCiAgfQp9Cg=="},{"version":3,"sources":["Contacts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Contacts.vue","sourceRoot":"src/components/chat","sourcesContent":["<template>\n  <div class=\"contacts\" v-loading.fullscreen.lock=\"loading\">\n    <el-card>\n      <div slot=\"header\" class=\"clearfix\">\n        <span>{{ $t('contacts') }}</span>\n      </div>\n      <div class=\"items\">\n        <div\n          v-for=\"(c, index) in contacts\"\n          :key=\"c\"\n          class=\"item\"\n          @click=\"setRoute(index)\"\n        >\n          <span class=\"detail\">{{ c }}</span>\n          <span class=\"detail\">{{ lastMessages[index][c] }}</span>\n        </div>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\n  import { mapGetters, mapActions } from 'vuex'\n  export default {\n    data() {\n      return {\n        contacts: [],\n        lastMessages: [],\n        chats: [],\n        ids: [],\n        timer: 0,\n        loading: false\n      }\n    },\n    created() {\n      this.loading = true\n      this.timer = setInterval(this.getData, 1000)\n    },\n    computed: {\n      ...mapGetters(['self'])\n    },\n    methods: {\n      ...mapActions(['handleRequest']),\n      getData() {\n        this.handleRequest({\n          name: 'chats/',\n          action: 'getAll'\n        }).then((res) => {\n          this.chats = res.data.messages\n          this.setContacts()\n        })\n      },\n      setContacts() {\n        this.contacts = []\n        this.lastMessages = []\n        for (let i = 0; i < this.chats.length; i++) {\n          if (\n            this.chats[i].sender.id !== this.self.id &&\n            this.contacts.indexOf(this.chats[i].sender.persian_username) < 0\n          ) {\n            this.contacts.push(this.chats[i].sender.persian_username)\n            this.lastMessages.push({\n              [this.chats[i].sender.persian_username]: this.chats[i].text,\n              user_id: this.chats[i].sender.id\n            })\n          } else if (\n            this.chats[i].receiver.id !== this.self.id &&\n            this.contacts.indexOf(this.chats[i].receiver.persian_username) < 0\n          ) {\n            this.contacts.push(this.chats[i].receiver.persian_username)\n            this.lastMessages.push({\n              [this.chats[i].receiver.persian_username]: this.chats[i].text,\n              user_id: this.chats[i].receiver.id\n            })\n          }\n        }\n        this.loading = false\n      },\n      setRoute(index) {\n        if (this.lastMessages[index]['user_id'] != this.$route.params.id) {\n          this.$router.push({\n            name: 'ChatID',\n            params: { id: this.lastMessages[index]['user_id'] }\n          })\n        }\n      }\n    },\n    beforeDestroy() {\n      clearInterval(this.timer)\n    }\n  }\n</script>\n"]}]}