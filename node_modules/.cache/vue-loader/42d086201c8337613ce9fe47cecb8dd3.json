{"remainingRequest":"/home/elaheh/Documents/University/Vue-Book-Land/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/elaheh/Documents/University/Vue-Book-Land/src/components/post/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/elaheh/Documents/University/Vue-Book-Land/src/components/post/List.vue","mtime":1629962977259},{"path":"/home/elaheh/Documents/University/Vue-Book-Land/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/elaheh/Documents/University/Vue-Book-Land/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/elaheh/Documents/University/Vue-Book-Land/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JwppbXBvcnQgQ3JpdGljaXNtIGZyb20gJ0AvY29tcG9uZW50cy9wb3N0L0NyaXRpY2lzbScKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwb3N0czogW10sCiAgICAgIGxvYWRpbmc6IGZhbHNlCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgaWYgKHRoaXMuc2VsZikgewogICAgICB0aGlzLmdldFBvc3RzKCkKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKFsnc2VsZiddKQogIH0sCiAgbWV0aG9kczogewogICAgLi4ubWFwQWN0aW9ucyhbJ2hhbmRsZVJlcXVlc3QnXSksCiAgICBnZXRQb3N0cygpIHsKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZQogICAgICB0aGlzLmhhbmRsZVJlcXVlc3QoewogICAgICAgIG5hbWU6ICdwb3N0cy8nLAogICAgICAgIGFjdGlvbjogJ2dldEFsbCcsCiAgICAgICAgZGF0YTogewogICAgICAgICAgcXVlcnk6IHsKICAgICAgICAgICAgdXNlcl9pZDogdGhpcy5zZWxmLmlkCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KQogICAgICAgIC50aGVuKChyZXMpID0+IHsKICAgICAgICAgIHRoaXMucG9zdHMgPSByZXMuZGF0YS5wb3N0cwogICAgICAgIH0pCiAgICAgICAgLmZpbmFsbHkoKCkgPT4gKHRoaXMubG9hZGluZyA9IGZhbHNlKSkKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBzZWxmKCkgewogICAgICB0aGlzLmdldFBvc3RzKCkKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIENyaXRpY2lzbQogIH0KfQo="},{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/components/post","sourcesContent":["<template>\n  <div class=\"view-book\" v-loading.fullscreen.lock=\"loading\">\n    <div class=\"post flexbox column-direction align-center\" v-if=\"posts.length\">\n      <div class=\"criticisms-title\">\n        <span>{{ $t('my_criticisms') }}</span>\n      </div>\n      <Criticism v-for=\"p in posts\" :key=\"p.id\" :post=\"p\" :isMyPosts=\"true\" />\n    </div>\n  </div>\n</template>\n\n<script>\n  import { mapActions, mapGetters } from 'vuex'\n  import Criticism from '@/components/post/Criticism'\n  export default {\n    data() {\n      return {\n        posts: [],\n        loading: false\n      }\n    },\n    created() {\n      if (this.self) {\n        this.getPosts()\n      }\n    },\n    computed: {\n      ...mapGetters(['self'])\n    },\n    methods: {\n      ...mapActions(['handleRequest']),\n      getPosts() {\n        this.loading = true\n        this.handleRequest({\n          name: 'posts/',\n          action: 'getAll',\n          data: {\n            query: {\n              user_id: this.self.id\n            }\n          }\n        })\n          .then((res) => {\n            this.posts = res.data.posts\n          })\n          .finally(() => (this.loading = false))\n      }\n    },\n    watch: {\n      self() {\n        this.getPosts()\n      }\n    },\n    components: {\n      Criticism\n    }\n  }\n</script>\n"]}]}