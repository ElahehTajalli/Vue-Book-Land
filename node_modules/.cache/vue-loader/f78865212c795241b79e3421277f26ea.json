{"remainingRequest":"/home/elaheh/Documents/University/Vue-Book-Land/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/elaheh/Documents/University/Vue-Book-Land/src/components/comment/Comment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/elaheh/Documents/University/Vue-Book-Land/src/components/comment/Comment.vue","mtime":1628249084423},{"path":"/home/elaheh/Documents/University/Vue-Book-Land/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/elaheh/Documents/University/Vue-Book-Land/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/elaheh/Documents/University/Vue-Book-Land/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/elaheh/Documents/University/Vue-Book-Land/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/elaheh/Documents/University/Vue-Book-Land/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JwppbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudC1qYWxhYWxpJwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGphbGFsaUZvcm1hdDogJ2pZWVlZL2pNL2pEJywKICAgICAgbmV3X2NvbW1lbnQ6IHRoaXMuY29tbWVudAogICAgfQogIH0sCiAgcHJvcHM6IHsKICAgIGNvbW1lbnQ6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiAoKSA9PiB7fQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoWydzZWxmJ10pLAogICAgZGF0ZVRpbWUoKSB7CiAgICAgIHJldHVybiBtb21lbnQodGhpcy5jb21tZW50LmNyZWF0ZWRfYXQpLmZvcm1hdCh0aGlzLmphbGFsaUZvcm1hdCkKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC4uLm1hcEFjdGlvbnMoWydoYW5kbGVSZXF1ZXN0J10pLAogICAgZWRpdENvbW1lbnQoYWN0aW9uKSB7CiAgICAgIHRoaXMuaGFuZGxlUmVxdWVzdCh7CiAgICAgICAgbmFtZTogJ2NvbW1lbnRzL2VkaXQnLAogICAgICAgIGFjdGlvbjogJ3BhdGNoJywKICAgICAgICBkYXRhOiB7CiAgICAgICAgICB0b1BhdGNoOiB7CiAgICAgICAgICAgIHVzZXI6IHRoaXMuc2VsZi5pZCwKICAgICAgICAgICAgY29tbWVudDogdGhpcy5jb21tZW50LmlkLAogICAgICAgICAgICBhY3Rpb24KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pLnRoZW4oKHJlcykgPT4gewogICAgICAgIHRoaXMubmV3X2NvbW1lbnQgPSByZXMuZGF0YS5jb21tZW50CiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Comment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Comment.vue","sourceRoot":"src/components/comment","sourcesContent":["<template>\n  <div class=\"criticism\">\n    <div class=\"top\">\n      <div class=\"detail\">\n        <img\n          class=\"image\"\n          src=\"https://img.icons8.com/cotton/64/000000/person-male--v2.png\"\n        />\n        <span v-if=\"comment.user\"> {{ comment.user.persian_username }}</span>\n      </div>\n    </div>\n    <span class=\"text\">{{ comment.text }}</span>\n    <div class=\"bottom\">\n      <div class=\"date\">\n        <img src=\"https://img.icons8.com/ios/100/184277/planner.png\" />\n        <span>{{ dateTime }}</span>\n      </div>\n      <div class=\"likes\">\n        <div @click=\"editComment('dislike')\">\n          <span>\n            {{ new_comment.dislikes.length }}\n          </span>\n          <img\n            src=\"https://img.icons8.com/material-rounded/24/ff0000/thumbs-down.png\"\n          />\n        </div>\n        <div @click=\"editComment('like')\">\n          <span>\n            {{ new_comment.likes.length }}\n          </span>\n          <img\n            src=\"https://img.icons8.com/material-rounded/24/00ff30/facebook-like--v1.png\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { mapActions, mapGetters } from 'vuex'\n  import moment from 'moment-jalaali'\n  export default {\n    data() {\n      return {\n        jalaliFormat: 'jYYYY/jM/jD',\n        new_comment: this.comment\n      }\n    },\n    props: {\n      comment: {\n        type: Object,\n        default: () => {}\n      }\n    },\n    computed: {\n      ...mapGetters(['self']),\n      dateTime() {\n        return moment(this.comment.created_at).format(this.jalaliFormat)\n      }\n    },\n    methods: {\n      ...mapActions(['handleRequest']),\n      editComment(action) {\n        this.handleRequest({\n          name: 'comments/edit',\n          action: 'patch',\n          data: {\n            toPatch: {\n              user: this.self.id,\n              comment: this.comment.id,\n              action\n            }\n          }\n        }).then((res) => {\n          this.new_comment = res.data.comment\n        })\n      }\n    }\n  }\n</script>\n"]}]}